# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Monorail API
  description: Monorail CI core API
  version: "1.1.0"

# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /api/1.1
produces:
  - application/json
paths:
  /catalogs:
    get:
      summary: get list of all catalogs
      description: |
        The catalogs endpoint returns json data that represent the catalogs of
        all hardware in the system.
      parameters:
        - name: query
          in: query
          description: query object to pass through to waterline.
          required: false
          type: string
      tags:
        - catalog
      responses:
        200:
          description: An array of catalogs
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /catalogs/{identifier}:
    get:
      summary: get list of all catalogs
      description: |
        The catalogs endpoint returns json data that represent the catalogs of
        all hardware in the system.
      parameters:
        - name: identifier
          in: path
          description: identifier of a catalog
          required: true
          type: string
      tags:
        - catalog
      responses:
        200:
          description: A single catalog
          schema:
            type: array
            items:
              $ref: '#/definitions/catalog'
        default:
          description: NotFound error

definitions:
  catalog:
    properties:
      id:
        type: string
      source:
        type: string
      node:
        $ref: '#/definitions/node'
      data:
        type: object
        description: arbitrary json object
  node:
    properties:
      id:
        type: string
      profile:
        type: string
      name:
        type: string
      obmSettings:
        type: object
      ipAddresses:
        type: object
      workflows:
        type: array
        items:
          $ref: '#/definitions/graphobject'
      catalogs:
        type: array
        items:
          $ref: '#/definitions/catalog'
      sku:
        $ref: '#/definitions/sku'
  graphobject:
    properties:
      id:
        type: string
      instanceid:
        type: string
      context:
        type: object
      definition:
        type: object
      tasks:
        type: object
      node:
        $ref: '#/definitions/node'
  sku:
    properties:
      id:
        type: string
      name:
        type: string
      rules:
        type: object
      nodes:
        type: array
        items:
          $ref: '#/definitions/node'
      discoveryGraphName:
        type: string
      discoveryGraphOptions:
        type: object
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
